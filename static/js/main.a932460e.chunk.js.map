{"version":3,"sources":["Asset/Images/x.png","Asset/Images/o.png","Components/BoardArea/Cell/Cell.tsx","Components/BoardArea/Board/Board.tsx","Components/LayoutArea/Footer/Footer.tsx","Components/LayoutArea/Header/Header.tsx","Components/LayoutArea/Layout/Layout.tsx","reportWebVitals.ts","index.tsx"],"names":["Cell","props","className","cellClass","onClick","value","src","xImage","oImage","Board","lines","steps","state","squares","Array","xIsNext","winner","i","this","slice","setState","setTimeout","calculateWinner","computerCanWin","calculateComputerCanWin","playerCanWin","calculatePlayerCanWin","console","log","emptyCells","length","push","randomCell","Math","floor","random","handleClick","a","b","c","Component","Footer","Header","Layout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a932460e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/x.89af75f7.png\";","export default __webpack_public_path__ + \"static/media/o.a9b33b4e.png\";","import { Component } from \"react\";\nimport xImage from \"../../../Asset/Images/x.png\"\nimport oImage from \"../../../Asset/Images/o.png\"\nimport \"./Cell.css\";\n\ninterface CellProps{\n    value: string;\n    cellClass?: string;\n    onClick?: React.MouseEventHandler<HTMLDivElement>;\n}\n\ninterface CellState{\n    value: string;\n}\n\nfunction Cell(props: CellProps): JSX.Element {\n    return (\n        <div className={\"Cell \" + props.cellClass} onClick={props.onClick}>\n\t\t\t{props.value === \"X\" ? <img src={xImage}/> : null }\n            {props.value === \"O\" ? <img src={oImage}/> : null }\n        </div>\n    );\n}\n\nexport default Cell;\n","import { Component } from \"react\";\nimport Cell from \"../Cell/Cell\";\nimport \"./Board.css\";\n\ninterface BoardState {\n    squares: string[];\n    xIsNext: boolean;\n    winner: string;\n}\n\nclass Board extends Component<{}, BoardState> {\n\n    private lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ]\n\n    private steps = 0;\n\n    public constructor(props: {}) {\n        super(props);\n        this.state = {\n            squares: new Array<string>(9),\n            xIsNext: true,\n            winner: \"\"\n        }\n    }\n\n    public handleClick(i: number): void {\n        const squares = this.state.squares.slice();\n        if (squares[i]) {\n\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"X\" : null;\n        this.setState({ squares: squares, xIsNext: !this.state.xIsNext},() => {\n            setTimeout(() => {\n                this.steps++;\n                if (this.calculateWinner(squares) === \"X\") {\n                    this.setState({winner: \"X\"})\n                    return;\n                }\n                \n                const computerCanWin: number = this.calculateComputerCanWin(this.state.squares);\n                const playerCanWin: number = this.calculatePlayerCanWin(this.state.squares);\n\n                console.log(\"computre can win in cell index : \" + computerCanWin)\n                if (computerCanWin !== null && squares[computerCanWin] === null) {\n                    console.log(\"computer can win\")\n                    squares[computerCanWin] = \"O\";\n                }\n                else if(playerCanWin && squares[playerCanWin] === null){\n                    console.log(\"player can win\")\n                    squares[playerCanWin] = \"O\";\n                    console.log(\"player cannot win because computer\")\n\n                }\n                else{\n                    console.log(\"random O\")\n                    const emptyCells = [];\n                    \n                    for (let i = 0; i < squares.length; i++) {\n                        if(squares[i] === null){\n                            emptyCells.push(i)\n                        }                        \n                    }\n                        const randomCell = Math.floor(Math.random()* emptyCells.length);\n                        squares[emptyCells[randomCell]] = \"O\"\n                }\n                this.setState({squares: squares, xIsNext: !this.state.xIsNext},() => {\n                    this.steps++;\n\n                    if (this.calculateWinner(squares) === \"O\") {\n                        setTimeout(() => {\n                            this.setState({winner: \"O\"})\n                        },1000)\n                    }\n                });\n            },1000)\n        })\n    }\n\n    public componentDidMount(): void{\n        const squares = this.state.squares.slice();\n        for (let i = 0; i < squares.length; i++) {\n            squares[i] = null;\n            \n        }\n        this.setState({squares})\n    }\n\n    public render(): JSX.Element {\n        const winner = this.state.winner;\n        return (\n            <div className=\"Board\">\n\n                {winner ? \n                \n                <div className=\"Status\">\n                    {winner === \"X\" || winner === \"O\" ? <h1>The Winner is : {winner}</h1> : <h1>No one win it: {winner} </h1>}\n                </div> : \n                <>\n                    <div className=\"Line-Group\">\n                        <Cell onClick={() => this.handleClick(0)} value={this.state.squares[0]} cellClass=\"left-top\" />\n                        <Cell onClick={() => this.handleClick(1)} value={this.state.squares[1]} cellClass=\"mid-top\" />\n                        <Cell onClick={() => this.handleClick(2)} value={this.state.squares[2]} cellClass=\"right-top\" />\n                    </div>\n                    <div className=\"Line-Group\">\n                        <Cell onClick={() => this.handleClick(3)} value={this.state.squares[3]} cellClass=\"left-mid\" />\n                        <Cell onClick={() => this.handleClick(4)} value={this.state.squares[4]} cellClass=\"mid-mid\" />\n                        <Cell onClick={() => this.handleClick(5)} value={this.state.squares[5]} cellClass=\"right-mid\" />\n                    </div>\n                    <div className=\"Line-Group\">\n                        <Cell onClick={() => this.handleClick(6)} value={this.state.squares[6]} cellClass=\"left-bottom\" />\n                        <Cell onClick={() => this.handleClick(7)} value={this.state.squares[7]} cellClass=\"mid-bottom\" />\n                        <Cell onClick={() => this.handleClick(8)} value={this.state.squares[8]} cellClass=\"right-bottom\" />\n                    </div>\n                </>     \n                }\n            </div>\n        );\n    }\n\n    public calculateWinner(squares: string[]) {\n    \n        for (let i = 0; i < this.lines.length; i++) {\n          const [a, b, c] = this.lines[i];\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n          }\n          else if(this.steps === 9){\n              this.setState({winner: \"tie\"});\n          }\n        }\n        return null;\n      }\n\n      public calculateComputerCanWin(squares: string[]) {\n    \n        for (let i = 0; i < this.lines.length; i++) {\n          const [a, b, c] = this.lines[i];\n          if (squares[b] === \"O\" && squares[c] === \"O\" && squares[a] === null) {\n            return a;\n          }\n          if (squares[a] === \"O\" && squares[c] === \"O\" && squares[b] === null) {\n            return b;\n          }\n          if (squares[a] === \"O\" && squares[b] === \"O\" && squares[c] === null) {\n            return c;\n          }\n        }\n        return null;\n      }\n\n      public calculatePlayerCanWin(squares: string[]) {\n    \n        for (let i = 0; i < this.lines.length; i++) {\n          const [a, b, c] = this.lines[i];\n          if (squares[b] === \"X\" && squares[c] === \"X\" && squares[a] === null) {\n            return a;\n          }\n          if (squares[a] === \"X\" && squares[c] === \"X\" && squares[b] === null) {\n            return b;\n          }\n          if (squares[a] === \"X\" && squares[b] === \"X\" && squares[c] === null) {\n            return c;\n          }\n        }\n        return null;\n      }\n}\n\nexport default Board;\n","import \"./Footer.css\";\n\nfunction Footer(): JSX.Element {\n    return (\n        <div className=\"Footer\">\n\t\t\t<h4>Copyright &copy; Ofir Luzon</h4>\n        </div>\n    );\n}\n\nexport default Footer;\n","import \"./Header.css\";\n\nfunction Header(): JSX.Element {\n    return (\n        <div className=\"Header\">\n\t\t\t<h1>XO Game</h1>\n        </div>\n    );\n}\n\nexport default Header;\n","import Board from \"../../BoardArea/Board/Board\";\nimport Footer from \"../Footer/Footer\";\nimport Header from \"../Header/Header\";\nimport \"./Layout.css\";\n\nfunction Layout(): JSX.Element {\n    return (\n        <div className=\"Layout\">\n\t\t\t<header>\n                <Header/>\n            </header>\n            <main>\n                <Board/>\n            </main>\n            <footer>\n                <Footer/>\n            </footer>\n        </div>\n    );\n}\n\nexport default Layout;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './Components/LayoutArea/Layout/Layout';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}